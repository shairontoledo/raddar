# Notifications

add_message_notification = (item) ->
  menu = $('li#messages_notifications').children('ul.dropdown-menu')
  
  menu.children("li##{item.user}_message_notification").remove()
  menu.prepend('<li id="#{item.user}_message_notification" class="message_notification">#{item.content}</li>')

  update_notifications('messages_notifications', menu.children('li.message_notification').size())






update_notifications = (id, count) ->
  notification_count = $("li##{id}").find("span.notification_count")
  icon = $("li##{id}").find("i")
  notification_count.html count if count isnt null 

  if parseInt(notification_count.html()) > 0
    notification_count.show()
    icon.addClass('icon-white')
  else
    notification_count.hide()
    icon.removeClass('icon-white')

window.update_messages_notifications = (count) ->
  update_notifications('#messages_notifications', count)

window.update_general_notifications = (count) ->
  update_notifications('#general_notifications', count)  


# Confirm on unload window 

confirm_form_changed = false

window.confirm_unload = ->
  confirm_form_changed = true
  
  
check_confirm_unload = ->  
  if confirm_form_changed  
    return "<%= I18n.t 'js.confirm_unload' %>";  


# Maps and geolocation

window.single_marker_map =  (map_id, location, getCoordinates) ->

  myOptions =
    zoom: 15
    center: location
    mapTypeId: google.maps.MapTypeId.ROADMAP

  map = new google.maps.Map(document.getElementById(map_id), myOptions)

  marker = new google.maps.Marker
    map: map
    position: location
    animation: google.maps.Animation.DROP
  if getCoordinates
    marker.setDraggable true
    google.maps.event.addListener marker, 'dragend', ->
      $('#lat').val marker.getPosition().lat()
      $('#lng').val marker.getPosition().lng()


window.simple_map =  (map_id, centerLocation) ->

  myOptions =
    zoom: 15
    center: centerLocation
    mapTypeId: google.maps.MapTypeId.ROADMAP

  new google.maps.Map(document.getElementById(map_id), myOptions)


window.user_location = (callback)->
  handleNoGeolocation = (error)->
    console.log "Geolocation service failed."
    callback null

  if navigator.geolocation
    navigator.geolocation.getCurrentPosition (position) ->
      callback
        lat: position.coords.latitude
        lng: position.coords.longitude
    , handleNoGeolocation
  else
    handleNoGeolocation(null)
  
  

$ ->
  update_messages_notifications()
  update_general_notifications()
  window.onbeforeunload = check_confirm_unload
